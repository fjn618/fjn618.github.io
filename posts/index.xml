<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 包子的小世界</title>
    <link>http://fjn618.xyz/posts/</link>
    <description>Recent content in Posts on 包子的小世界</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Fri, 18 Oct 2019 15:31:37 +0800</lastBuildDate>
    
	<atom:link href="http://fjn618.xyz/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CSS 知识总结</title>
      <link>http://fjn618.xyz/2019/css-%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</link>
      <pubDate>Fri, 18 Oct 2019 15:31:37 +0800</pubDate>
      
      <guid>http://fjn618.xyz/2019/css-%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</guid>
      <description>浏览器渲染原理 浏览器渲染过程
1. 根据HTML构建HTML树(DOM)
2. 根据CSS构建CSS树(CSSOM)
3. 将两棵树合并成一颗渲染树(render tree)
4. Layout布局(文档流,盒模型,计算大小和位置)
5. Paint绘制(把边框颜色,文字颜色,阴影等画出来)
6. Compose合成(根据层叠关系展示画面)
如何更新样式
1. 第一种,全走
div.remove()会触发当前消失,其他元素relayout
2. 第二种,跳过layout
改变背景颜色,直接repaint+composite
3. 第三种,跳过layout和paint 改变transform,只需composite
(注意全屏查看效果,在iframe里看有问题)
每个属性对应的流程
transform
css性能优化之一&amp;mdash;&amp;mdash;把left改成transform
其他优化方式
JS优化
使用requestAnimationFrame代替setTimeout或setInterval
css优化
使用will-change或translate
transform全解&amp;ndash;mdn
四个常用功能
1. 位移translate
2. 缩放scale
3. 旋转rotate
4. 倾斜skew
一般都需要配合transition过渡
inline元素不支持transform,需要先变成block
css动画 transform、transition 和 :hover 制作一颗会动的红心
animation 制作一颗会动的红心</description>
    </item>
    
    <item>
      <title>CSS 基础</title>
      <link>http://fjn618.xyz/2019/css%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Wed, 09 Oct 2019 15:31:37 +0800</pubDate>
      
      <guid>http://fjn618.xyz/2019/css%E5%9F%BA%E7%A1%80/</guid>
      <description> 如何查询哪些浏览器支持哪些特性 查询网站
输入你想了解的样式
css语法  样式语法
选择器{ 属性名: 属性值; /*注释*/ }  符号如果写错了,浏览器会警告.
 at语法
@charset &amp;ldquo;UTF-8&amp;rdquo;;声明字符编码
@import url(2.css);导入额外的css文件
@media (min-width: 100px) and (max-width: 200px) { 语法1 }媒体查询
 注意事项
@charset必须放在第一行
前两个at语法必须以分号;结尾
charset是字符集的意思,但UTF-8是字符编码
  border调试法 给怀疑的元素加border,没出现效果说明选择器错了或者语法错了,出现了看看边界是否符合预期,bug解决了才可以把border删掉
css的border调试法相当于js的log调试法
文档流 文档流指文档中元素的流动方向
1. 流动方向
inline元素从左到右,到达最右边才会换行
block元素从上到下,每一个都另起一行
inline-block也是从左到右,但不会把自己分成两块 2. 宽度
inline宽度为内部inline元素的和,不能用width指定
block默认自动计算宽度,可用width指定
inline-block结合前两者特点,可用width
永远不要写宽度百分之百,会有bug
3. 高度
inline高度由line-height间接确定,跟height无关
block高度由内部文档流元素决定,可以设height
inline-block跟block类似,可以设置height
overflow溢出  当内容大于容器 等内容的宽度或高度大于容器的会溢出
可用overflow来设置是否显示滚动条
auto是灵活设置
scroll是永远显示
hidden是直接隐藏溢出部分
visible是直接显示溢出部分
overflow可以分为overflow-x和overflow-y  </description>
    </item>
    
    <item>
      <title>如何用 hugo 搭建个人博客</title>
      <link>http://fjn618.xyz/2019/hugo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Thu, 29 Aug 2019 17:18:26 +0800</pubDate>
      
      <guid>http://fjn618.xyz/2019/hugo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>Hugo:Go语言实现的博客生成器  第一步:下载hugo
 安装hugo
Mac安装方式
brew install hugo
hugo version
Windows安装方式
下载hugo_版本号_系统.zip 下载地址
以我的版本为例 解压后得到hugo.exe文件
 把hugo.exe所在的文件夹路径添加到path
右键此电脑,进入属性,点击高级系统设置,选择环境变量,双击path,点击新建,将hugo.exe的路径粘贴后点击确定  重启终端,输入 hugo version 查看版本号
  第二步:搭建框架
 创建一个目录并进入它  进入hugo官网后点击quick start
 从step2开始复制代码到终端
step2:hugo new site quickstart
创建一个名为quickstart的仓库,建议将名字更改为你的用户名.github.io-creator
step3:
cd quickstart
git init
git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke
echo &#39;theme = &amp;quot;ananke&amp;quot;&#39; &amp;gt;&amp;gt; config.toml
本地仓库初始化,并使用ananke主题进行美化 更多主题
step4:hugo new posts/my-first-post.md
添加了名为my-first-post的一篇内容
step5:hugo server -D启动hugo
step6:打开config.toml编辑以下内容
baseURL = &amp;quot;https://你的域名/&amp;quot; languageCode = &amp;quot;zh-ch&amp;quot; title = &amp;quot;你的网站名&amp;quot; theme = &amp;quot;ananke&amp;quot;  step7:hugo构建静态页面</description>
    </item>
    
    <item>
      <title> JS 的基本语法</title>
      <link>http://fjn618.xyz/2019/js%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Thu, 29 Aug 2019 15:31:37 +0800</pubDate>
      
      <guid>http://fjn618.xyz/2019/js%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</guid>
      <description>表达式和语句  表达式
1+2表达式的值为3
add(1,2)表达式的值为函数的返回值,只有函数有返回值
console.log表达式的值为函数本身 console.log(3)表达式的值为 undefined
 语句
var a=1是一个语句
 二者的区别
表达式一般都有值,语句可能有也可能没有
  大部分空格和回车没有实际意义,只有一个地法不能加回车,return的后面
标识符的规则 第一个字符,可以是Unicode字母或$或 _ 或中文
后面的字符除了上面还可以有数字
变量名是标识符
var_=1
var$=2
var______=6
var你好=&amp;lsquo;hi&amp;rsquo;
if else 语句 if (表达式){语句1}else{语句2}
{}在语句只有一句的时候可以省略 最推荐的写法
if (表达式) {
语句
} else if (表达式) {
语句
} else {
语句
}
while for 语句 while
* while(表达式){语句}
判断表达式的真假
当表达式为真,执行语句,执行完再判断表达式的真假
当表达式为假,执行后面的语句
* for
for(语句1;表达式2;语句3){ 循环体 }
先执行语句1 然后判断表达式2 如果为真,执行循环体,然后执行语句3
如果为假,直接退出循环,执行后面的语句
break continue break:退出所有循环</description>
    </item>
    
    <item>
      <title>HTML入门笔记1</title>
      <link>http://fjn618.xyz/2019/html%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/</link>
      <pubDate>Thu, 29 Aug 2019 15:31:37 +0800</pubDate>
      
      <guid>http://fjn618.xyz/2019/html%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/</guid>
      <description> WWW:World Wide Web 万维网WWW=URL+HTTP+HTML
HTML之父 Tim Berners-Lee,1990年左右基于互联网发明了万维网,用自己写的浏览器访问了自己的服务器,让每个人输入网址就能看到网页,2004年获得大英帝国爵级司令勋章.2017年被颁发图灵奖.
HTML起手 &amp;lt;!DOCTYPE html&amp;gt; # 文档类型 &amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt; # 页面语言 中文通常改成zh-CN &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt; # 支持所有语言标准 &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt; # 防止页面缩放 &amp;lt;meta http-equiv=&amp;quot;X-UA-Compatible&amp;quot; content=&amp;quot;ie=edge&amp;quot;&amp;gt; # 更新至最新页面版本 &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt; # 网页标题 &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;  章节标签  标题h1~h6
 章节section
 文章article 段落p 头部header 主要内容main 旁支内容aside 划分div
  全局属性  class标签分类 contenteditable用户可编辑 hidden隐藏 id不报错尽量使用class style html的属性,比css高一级,会被js覆盖 tabindex可交互属性 title提示  内容标签  ol+li有序列表中的一项 ul+li无序列表中的一项 dl+dt+dd描述列表 pre保留空格回车 hr分割线 br换行 a超链接 em语气的强调 strong内容的强调 code内容代码等宽 quote引用 blockquote换行引用  </description>
    </item>
    
    <item>
      <title>HTML常用标签</title>
      <link>http://fjn618.xyz/2019/html%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</link>
      <pubDate>Thu, 29 Aug 2019 15:31:37 +0800</pubDate>
      
      <guid>http://fjn618.xyz/2019/html%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</guid>
      <description>a标签用法  属性  href超链接 target指定在哪里打开页面 download理论上下载网页,不过很多情况下不支持 rel=noopener防止bug
  a的href取值  网址
https://google.com
http://google.com
//google.com无协议网址
 路径
/a/b/c以及a/b/c
index.html 以及./index.html
 伪协议
javascript:代码;
mailto:邮箱
tel:手机号
 id
href=#xxx
  作用
 跳转外部页面 跳转内部锚点 跳转到邮箱或电话等
  a的target取值
 内置名字
_blank在空白页面打开
_top在顶级区域打开
_parent在上一级区域打开
_self在当前区域打开
以当前窗口打开为例
 程序员命名
window的name
iframe的name
   table标签用法  相关标签
 thead头部
 tbody内容
 tfoot尾部 tr其中的一行 td数据 th表头
table里只能有三个标签
&amp;lt;body&amp;gt; &amp;lt;table&amp;gt; &amp;lt;thead&amp;gt; &amp;lt;th&amp;gt;&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;包子&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;烧卖&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;小饼&amp;lt;/th&amp;gt; &amp;lt;/thead&amp;gt; &amp;lt;tbody&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;th&amp;gt;肉馅&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;7个&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;2个&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;5个&amp;lt;/th&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;th&amp;gt;素馅&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;1个&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;3个&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;4个&amp;lt;/th&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;th&amp;gt;糖馅&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;3个&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;5个&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;2个&amp;lt;/th&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/tbody&amp;gt; &amp;lt;tfoot&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;th&amp;gt;总量&amp;lt;/th&amp;gt; &amp;lt;td&amp;gt;11个&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;10个&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;11个&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/tfoot&amp;gt; &amp;lt;/table&amp;gt; &amp;lt;/body&amp;gt;    样式</description>
    </item>
    
    <item>
      <title>JavaScript的诞生</title>
      <link>http://fjn618.xyz/2019/javascript%E7%9A%84%E8%AF%9E%E7%94%9F/</link>
      <pubDate>Thu, 29 Aug 2019 15:31:37 +0800</pubDate>
      
      <guid>http://fjn618.xyz/2019/javascript%E7%9A%84%E8%AF%9E%E7%94%9F/</guid>
      <description>系统程序员Brendan Eich 用10天时间设计了Javascript
1）借鉴C语言的基本语法；
2）借鉴Java语言的数据类型和内存管理；
3）借鉴Scheme语言，将函数提升到&amp;rdquo;第一等公民&amp;rdquo;（first class）的地位；
4）借鉴Self语言，使用基于原型（prototype）的继承机制。
JavaScript是一种直译式脚本语言，是一种动态类型、弱类型、基于原型的语言，内置支持类型。它的解释器被称为JavaScript引擎，为浏览器的一部分，广泛用于客户端的脚本语言，最早是在HTML（标准通用标记语言下的一个应用）网页上使用，用来给HTML网页增加动态功能。
为了取得技术优势，微软推出了JScript，CEnvi推出ScriptEase，与JavaScript同样可在浏览器上运行。为了统一规格，JavaScript兼容于ECMA标准，因此也称为ECMAScript。
目前世界上使用最广泛的 JS 版本（IE 6 支持的版本）是第三版
截止到 2020 年，全球浏览器市场份额最高的浏览器是chrome</description>
    </item>
    
    <item>
      <title>JS 函数的执行时机</title>
      <link>http://fjn618.xyz/2019/js-%E5%87%BD%E6%95%B0%E7%9A%84%E6%89%A7%E8%A1%8C%E6%97%B6%E6%9C%BA/</link>
      <pubDate>Thu, 29 Aug 2019 15:31:37 +0800</pubDate>
      
      <guid>http://fjn618.xyz/2019/js-%E5%87%BD%E6%95%B0%E7%9A%84%E6%89%A7%E8%A1%8C%E6%97%B6%E6%9C%BA/</guid>
      <description> 1. let i = 0 for(i = 0; i&amp;lt;6; i++){ setTimeout(()=&amp;gt;{ console.log(i) },0) }  for循环后,立刻打印出i,因为只有一个i,所以6次值一样,for循环在i=6时停止,所以答案为6个6.
2. for(let i = 0; i&amp;lt;6; i++){ setTimeout(()=&amp;gt;{ console.log(i) },0) }  每次进入循环的时候,把i复制一份,所以会打印出来0,1,2,3,4,5
3. 利用 const 关键字
let i for(i = 0; i&amp;lt;6; i++){ const x = i setTimeout(()=&amp;gt;{ console.log(x) }) }  </description>
    </item>
    
    <item>
      <title>JS 对象基本用法</title>
      <link>http://fjn618.xyz/2019/js-%E5%AF%B9%E8%B1%A1%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</link>
      <pubDate>Thu, 29 Aug 2019 15:31:37 +0800</pubDate>
      
      <guid>http://fjn618.xyz/2019/js-%E5%AF%B9%E8%B1%A1%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</guid>
      <description>1：声明对象的两种语法 let obj = {&amp;lsquo;name&amp;rsquo;:&amp;lsquo;fu&amp;rsquo;}
console.log({&amp;lsquo;name&amp;rsquo;:&amp;lsquo;fu&amp;rsquo;,&amp;lsquo;age&amp;rsquo;,18})
2：如何删除对象的属性 delete obj.xxx或delete obj[&amp;lsquo;xxx&amp;rsquo;]
不含属性名
&amp;lsquo;xxx&amp;rsquo; in obj === false
含有属性名,但是值为undefined
&amp;lsquo;xxx&amp;rsquo; in obj&amp;amp;&amp;amp;obj.xxx === undefined
3：如何查看对象的属性 中括号语法:obj[&amp;lsquo;key&amp;rsquo;]
点语法:obj.key
优先使用中括号语法
查看自身所有属性
Object.keys(obj)
查看自身+共有属性
console.dir(obj)
或者自己依次用Object.keys打印出obj._ _ proto _ _
判断一个属性是自身的还是共有的
obj.hasOwnProperty(&amp;lsquo;toString&amp;rsquo;)
4：如何修改或增加对象的属性 改自身
obj[&amp;lsquo;name&amp;rsquo;]=&amp;lsquo;fu&amp;rsquo;
批量修改自身
Object.assign(obj,{age:18,&amp;hellip;})
改共有属性
Object.prototype[&amp;lsquo;toString&amp;rsquo;]=&amp;lsquo;xxx&amp;rsquo;
改原型
let obj=Object.create(common)
5：&amp;rsquo;name&amp;rsquo; in obj和obj.hasOwnProperty(&amp;lsquo;name&amp;rsquo;) 的区别 hasOwnProperty() 方法会返回一个布尔值，指示对象自身属性中（非继承属性）是否具有指定的属性， 如果 object 具有带指定名称的属性，则 hasOwnProperty 方法返回 true，否则返回 false。此方法不会检查对象原型链中的属性；该属性必须是对象本身的一个成员。</description>
    </item>
    
    <item>
      <title>JS数据类型</title>
      <link>http://fjn618.xyz/2019/js%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Thu, 29 Aug 2019 15:31:37 +0800</pubDate>
      
      <guid>http://fjn618.xyz/2019/js%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid>
      <description> 7种数据类型  数字number
NaN(Not a Number)用来表示 无法表示的数字 NaN不等于NaN 64位浮点数
符号占1位,指数占11位(-1023~1024),有效数字占52位(开头的1省略)
最大值Number.MAX_VALUE:1.7976931348623157e+308
最小值Number.MIX_VALUE:5e-324
15位有效数字可以精确表示,或者16位有效数字,小于90开头 字符串string
 布尔bool true和false
1、只要“&amp;amp;&amp;amp;”前面是false，无论“&amp;amp;&amp;amp;”后面是true还是false，结果都将返“&amp;amp;&amp;amp;”前面的值;
2、只要“&amp;amp;&amp;amp;”前面是true，无论“&amp;amp;&amp;amp;”后面是true还是false，结果都将返“&amp;amp;&amp;amp;”后面的值; 符号symbol
引号不包含在字符串内.
如果想储存&amp;rsquo;it&amp;rsquo;s ok&amp;rsquo; 则写为
&amp;lsquo;it\&amp;rsquo;s ok&amp;rsquo;
&amp;ldquo;it&amp;rsquo;s ok&amp;rdquo;
或改成反引号 it&#39;s ok
转义
\n 表示换行, \r表示回车, \t表示tab制表符, \ \表示 (斜杠\ )
\uFFFF表示对应的Unicode字符 \xFF表示前256个Unicode字符 空undefined 空null
 对象object
总结:四基两空一对象  </description>
    </item>
    
    <item>
      <title>包子的星球</title>
      <link>http://fjn618.xyz/2019/%E5%8C%85%E5%AD%90%E7%9A%84%E6%98%9F%E7%90%83/</link>
      <pubDate>Thu, 29 Aug 2019 15:31:37 +0800</pubDate>
      
      <guid>http://fjn618.xyz/2019/%E5%8C%85%E5%AD%90%E7%9A%84%E6%98%9F%E7%90%83/</guid>
      <description>hello 19980618</description>
    </item>
    
    <item>
      <title>浅析 URL</title>
      <link>http://fjn618.xyz/2019/%E6%B5%85%E6%9E%90-url/</link>
      <pubDate>Thu, 29 Aug 2019 15:31:37 +0800</pubDate>
      
      <guid>http://fjn618.xyz/2019/%E6%B5%85%E6%9E%90-url/</guid>
      <description>URL 协议: 基于TCP和IP两个协议
域名/IP:分为内网和外网 一个域名可以对应不同IP&amp;ndash;均衡负载,一个IP可以对应不同域名&amp;ndash;共享主机
端口号:对应不同的服务 port 0~1023留给系统使用 其他给普通用户使用
路径:请求不同的页面
查询字符串: 同一个页面,不同内容
锚点:同一个内容,不同位置 DNS 作用: 将域名和IP对应
nslookup命令: 查询DNS的记录，查看域名解析是否正常，在网络故障的时候用来诊断网络问题。
IP 作用: 定位区别不同的主机
特殊IP:123.0.0.1表示自己,localhost通过hosts指定为自己,0.0.0.0不表示任何设备
ping命令: ping baidu.com 可得到百度的ip
域名 com是顶级域名,xxx.com是二级域名,www.xxx.com是三级域名</description>
    </item>
    
  </channel>
</rss>